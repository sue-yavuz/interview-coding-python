1####################################################################################
Weather Observation Station 3 --> HackerRank

select distinct(CITY) from STATION where Mod(ID,2)=0;
2####################################################################################
Weather Observation Station 4
select count(city)-count(distinct(city)) from station; 
3####################################################################################
Weather Observation Station 5

select top 1 city, len(city)
from station
order by len(city), city asc
;
select top 1  city, len(city)
from station
order by len(city) desc
;
4####################################################################################
Weather Observation Station 6

select distinct city from station
where city like '[a,e,i,o,u]%';
5####################################################################################
Weather Observation Station 7

select distinct city from station
where city like '%[a,e,i,o,u]';
6####################################################################################
Weather Observation Station 8

select distinct city from station
where city like '%[a,e,i,o,u]' and city like '[a,e,i,o,u]%';
7####################################################################################
Weather Observation Station 9

select distinct city from station
where city  not like '[a,e,i,o,u]%';
8####################################################################################
10

select distinct city from station 
where city not like '%[aeiuo]';
####################################################################################
11
select distinct city from station 
where city not like '%[aeiuo]' or city not like '[aeiuo]%' ;
####################################################################################
12
select distinct city from station 
where city not like '%[aeiuo]' and city not like '[aeiuo]%';

Higher Than 75 Marks
select name from students
where marks >75
order by right(name,3), id;

2.way
select name from students
where marks >75
order by substring(name, len(name)-2,3) ,id;
####################################################################################
Employee Names
select name from employee
order by name;
####################################################################################
Employee Salaries
select name from employee
where salary > 2000 and months < 10
order by employee_id;
####################################################################################
Type of Triangle
SELECT  
    CASE
        WHEN A + B <= C or a + c <= b or b + c <= a THEN 'Not A Triangle'
        WHEN a = b and b = c THEN 'Equilateral'
        WHEN a = b OR b = c or a = c THEN 'Isosceles'
        ELSE 'Scalene'
    END 
FROM triangles;
####################################################################################
The PADS
select name + '(' + left(occupation,1) + ')' from OCCUPATIONS
order by name
select 'There are a total of ' + str(count(*))+ " "+ lower(occupation) + 's.' from OCCUPATIONS
group by occupation
order by count(*);

####################################################################################
Occupations
select
    Doctor,
    Professor,
    Singer,
    Actor
from (
    select
        NameOrder,
        max(case Occupation when 'Doctor' then Name end) as Doctor,
        max(case Occupation when 'Professor' then Name end) as Professor,
        max(case Occupation when 'Singer' then Name end) as Singer,
        max(case Occupation when 'Actor' then Name end) as Actor
    from (
            select
                Occupation,
                Name,
                row_number() over(partition by Occupation order by Name ASC) as NameOrder
            from Occupations
         ) as NameLists
    group by NameOrder
    ) as Names